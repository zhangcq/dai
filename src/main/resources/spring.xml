<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/util 
        http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">
	<!-- 使用注解方式配置bean，指定bean所在的包 -->
	<context:component-scan base-package="com.study" />
	<!--导入外部的属性文件 -->
	<context:property-placeholder location="classpath:db.properties" />
	<!-- 登录拦截 -->
	<!-- <mvc:interceptors> <mvc:interceptor> <mvc:mapping path="/**" /> <mvc:exclude-mapping 
		path="/js/**" /> <mvc:exclude-mapping path="/css/**" /> <mvc:exclude-mapping 
		path="/image/**" /> <bean id="loginInterceptor" class="com.mas.vcloud.utils.LoginInterceptor" 
		/> </mvc:interceptor> </mvc:interceptors> -->
	<!--配置数据源：数据库仓库，不用关闭或连接数据库，典型用空间换取时间的操作 -->
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="${jdbc.initialSize}" />
		<property name="minIdle" value="${jdbc.minIdle}" />
		<property name="maxTotal" value="${jdbc.maxTotal}" />
	</bean>
	<!--配置mybatis框架整合 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" /><!--数据源 -->
		<property name="typeAliasesPackage" value="com.study.dai.buy.po" /><!-- 
			采用别名的实体类 -->
		<property name="mapperLocations" value="classpath:mapper/*Mapper.xml" /> 
			<!-- 配置映射文件 -->
	</bean>
	<!--配置mybatis -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.study.dai.buy.dao" /><!--配置映射接口所在的包 -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" /><!-- 
			映射 sqlSessionFactory在Spring容器中的Bean的id值 -->
	</bean>
	<!--响应处理，视图处理器配置 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!--请求拦截后，交给对应 请求处理操作后，根据返回结果，拼接响应页面路径 prefix+返回值+suffix ==>/page/success.html -->
		<property name="prefix" value="/page/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>

	<!-- 多部分文件上传 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="1948576000" />
		<property name="maxInMemorySize" value="4096" />
		<property name="defaultEncoding" value="UTF-8"></property>
	</bean>
	<!--默认静态资源的请求处理 可以处理js文件 -->
	<mvc:default-servlet-handler />
	<!--控制器驱动处理 ,包括数据类型转换，数据格式化， -->
	<mvc:annotation-driven />
	
</beans>